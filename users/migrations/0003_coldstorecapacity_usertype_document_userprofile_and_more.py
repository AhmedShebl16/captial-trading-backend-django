# Generated by Django 5.2.5 on 2025-08-20 15:57

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_add_soft_delete_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='ColdStoreCapacity',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('capacity_type', models.CharField(choices=[('long_term', 'Long Term'), ('short_term', 'Short Term'), ('flexible', 'Flexible')], max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('available_capacity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.CharField(max_length=20)),
                ('minimum_duration', models.IntegerField(help_text='Minimum duration in days')),
                ('maximum_duration', models.IntegerField(help_text='Maximum duration in days')),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='EGP', max_length=3)),
                ('billing_frequency', models.CharField(default='monthly', max_length=20)),
                ('is_available', models.BooleanField(default=True)),
                ('current_utilization', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cold Store Capacity',
                'verbose_name_plural': 'Cold Store Capacities',
                'db_table': 'cold_store_capacity',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('admin', 'Admin Super User'), ('b2c_visitor', 'B2C (Visitor)'), ('corporate', 'Corporates'), ('purchasing_manager', 'Purchasing Manager (HoReCa)'), ('supplier', 'Supplier (Merchant)'), ('supplier_merchant', 'Supplier and Merchant'), ('cold_store_client', 'Cold Store Client')], max_length=50, unique=True)),
                ('description', models.TextField()),
                ('requires_contract', models.BooleanField(default=False)),
                ('can_sell', models.BooleanField(default=False)),
                ('can_buy', models.BooleanField(default=False)),
                ('can_store', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Type',
                'verbose_name_plural': 'User Types',
                'db_table': 'user_type',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('document_number', models.CharField(max_length=100, unique=True)),
                ('document_type', models.CharField(choices=[('route', 'Route (Loading and Unloading)'), ('loading_statement', 'Loading Statement'), ('invoice', 'Invoice'), ('receipt_confirmation', 'Customer Receipt Confirmation'), ('disbursement_order', 'Disbursement Order'), ('returns', 'Returns'), ('stock_location', 'Stock Location'), ('stock_status', 'Stock Status')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('content', models.JSONField(default=dict)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('status', models.CharField(default='draft', max_length=20)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_documents', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'db_table': 'document',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('business_registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('tax_id', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('business_size', models.CharField(blank=True, max_length=50, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.usertype')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('contract_number', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('active', 'Active'), ('expired', 'Expired'), ('terminated', 'Terminated')], default='draft', max_length=20)),
                ('terms_conditions', models.TextField()),
                ('special_conditions', models.TextField(blank=True, null=True)),
                ('base_discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('minimum_order_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('contract_file', models.FileField(blank=True, null=True, upload_to='contracts/')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_contracts', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_contracts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to=settings.AUTH_USER_MODEL)),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.usertype')),
            ],
            options={
                'verbose_name': 'Contract',
                'verbose_name_plural': 'Contracts',
                'db_table': 'contract',
            },
        ),
        migrations.CreateModel(
            name='BusinessRelationship',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('relationship_type', models.CharField(choices=[('supplier_customer', 'Supplier-Customer'), ('partner', 'Business Partner'), ('affiliate', 'Affiliate'), ('distributor', 'Distributor')], max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('primary_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_relationships', to=settings.AUTH_USER_MODEL)),
                ('secondary_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secondary_relationships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business Relationship',
                'verbose_name_plural': 'Business Relationships',
                'db_table': 'business_relationship',
                'unique_together': {('primary_user', 'secondary_user', 'relationship_type')},
            },
        ),
        migrations.CreateModel(
            name='PricingModel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('price_type', models.CharField(choices=[('end_user', 'End User Price (AI Generated)'), ('retail_b2c', 'Retail Price (B2C)'), ('retail_corporate', 'Retail Price (Corporate/Purchasing Manager)'), ('wholesale', 'Wholesale Price'), ('corporate', 'Corporate Price')], max_length=30)),
                ('product_name', models.CharField(max_length=200)),
                ('product_category', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=20)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='EGP', max_length=3)),
                ('minimum_quantity', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.usertype')),
            ],
            options={
                'verbose_name': 'Pricing Model',
                'verbose_name_plural': 'Pricing Models',
                'db_table': 'pricing_model',
                'unique_together': {('user_type', 'price_type', 'product_name', 'unit')},
            },
        ),
    ]
